{
  "swagger": "2.0",
  "info": {
    "title": "Tokens",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.2-preview"
  },
  "host": "vssps.dev.azure.com",
  "x-ms-vss-area": "Tokens",
  "x-ms-vss-resource-area-id": "55967393-20ef-45c6-a96c-b5d5d5986a9a",
  "basePath": "/",
  "tags": [
    {
      "name": "Pats",
      "description": "The PAT Lifecycle Management API allows users to manage the lifecycle of their personal access tokens (PATs), which can be used as an alternate method to authenticate into Azure DevOps."
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/{organization}/_apis/tokens/pats": {
      "post": {
        "tags": [
          "Pats"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "pats",
        "x-ms-vss-method": "CreatePat",
        "x-ms-preview": true,
        "description": "Creates a new personal access token (PAT) for the requesting user.",
        "operationId": "Pats_Create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatTokenCreateRequest"
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PatTokenResult"
            }
          }
        },
        "x-ms-examples": {
          "Create a new personal access token": {
            "$ref": "./httpExamples/Pats/CreatePat.json"
          }
        }
      },
      "get": {
        "tags": [
          "Pats"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "pats",
        "x-ms-vss-method": "GetPat",
        "x-ms-preview": true,
        "description": "Gets a single personal access token (PAT).",
        "operationId": "Pats_Get",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "authorizationId",
            "description": "The authorizationId identifying a single, unique personal access token (PAT)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PatTokenResult"
            }
          }
        },
        "x-ms-examples": {
          "Get a personal access token by authorizationId": {
            "$ref": "./httpExamples/Pats/GetPat.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Pats"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "pats",
        "x-ms-vss-method": "Revoke",
        "x-ms-preview": true,
        "description": "Revokes a personal access token (PAT) by authorizationId.",
        "operationId": "Pats_Revoke",
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "authorizationId",
            "description": "The authorizationId identifying a single, unique personal access token (PAT)",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "x-ms-examples": {
          "Revoke a personal access token by authorizationId": {
            "$ref": "./httpExamples/Pats/RevokePat.json"
          }
        }
      },
      "put": {
        "tags": [
          "Pats"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "pats",
        "x-ms-vss-method": "UpdatePat",
        "x-ms-preview": true,
        "description": "Updates an existing personal access token (PAT) with the new parameters. To update a token, it must be valid (has not been revoked).",
        "operationId": "Pats_Update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PatTokenUpdateRequest"
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PatTokenResult"
            }
          }
        },
        "x-ms-examples": {
          "Update a personal access token by authorizationId": {
            "$ref": "./httpExamples/Pats/UpdatePat.json"
          }
        }
      }
    }
  },
  "x-ms-paths": {
    "/{organization}/_apis/tokens/pats?": {
      "get": {
        "tags": [
          "Pats"
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "pats",
        "x-ms-vss-method": "ListPats",
        "x-ms-preview": true,
        "description": "Gets a paged list of personal access tokens (PATs) created in this organization. Subsequent calls to the API require the same filtering options to be supplied.",
        "operationId": "Pats_List",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "displayFilterOption",
            "description": "(Optional) Refers to the status of the personal access token (PAT)",
            "required": false,
            "type": "string",
            "enum": [
              "active",
              "revoked",
              "expired",
              "all"
            ],
            "x-ms-enum": {
              "name": "DisplayFilterOptions",
              "values": [
                {
                  "value": "active",
                  "description": "Token is active (e.g. has not been revoked and has not expired)."
                },
                {
                  "value": "revoked",
                  "description": "Token has been revoked and is no longer usable."
                },
                {
                  "value": "expired",
                  "description": "Token has expired and is no longer usable unless updated with a new expiration date."
                },
                {
                  "value": "all",
                  "description": "Includes all tokens."
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "sortByOption",
            "description": "(Optional) Which field to sort by",
            "required": false,
            "type": "string",
            "enum": [
              "displayName",
              "displayDate",
              "status"
            ],
            "x-ms-enum": {
              "name": "SortByOptions",
              "values": [
                {
                  "value": "displayName",
                  "description": "Sort by display name"
                },
                {
                  "value": "displayDate",
                  "description": "Sort by display date"
                },
                {
                  "value": "status",
                  "description": "Sort by status"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "isSortAscending",
            "description": "(Optional) Ascending or descending",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "(Optional) Where to start returning tokens from",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "(Optional) How many tokens to return, limit of 100",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/api-Version-preview.1"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PagedPatTokens"
            }
          }
        },
        "x-ms-examples": {
          "List personal access tokens": {
            "$ref": "./httpExamples/Pats/ListPats.json"
          }
        }
      }
    }
  },
  "definitions": {
    "AccessTokenResult": {
      "description": "",
      "type": "object",
      "properties": {
        "accessToken": {
          "$ref": "#/definitions/JsonWebToken"
        },
        "accessTokenError": {
          "enum": [
            "none",
            "grantTypeRequired",
            "authorizationGrantRequired",
            "clientSecretRequired",
            "redirectUriRequired",
            "invalidAuthorizationGrant",
            "invalidAuthorizationScopes",
            "invalidRefreshToken",
            "authorizationNotFound",
            "authorizationGrantExpired",
            "accessAlreadyIssued",
            "invalidRedirectUri",
            "accessTokenNotFound",
            "invalidAccessToken",
            "accessTokenAlreadyRefreshed",
            "invalidClientSecret",
            "clientSecretExpired",
            "serverError",
            "accessDenied",
            "accessTokenKeyRequired",
            "invalidAccessTokenKey",
            "failedToGetAccessToken",
            "invalidClientId",
            "invalidClient",
            "invalidValidTo",
            "invalidUserId",
            "failedToIssueAccessToken",
            "authorizationGrantScopeMissing",
            "invalidPublicAccessTokenKey",
            "invalidPublicAccessToken",
            "publicFeatureFlagNotEnabled",
            "sshPolicyDisabled",
            "hostAuthorizationNotFound",
            "hostAuthorizationIsNotValid",
            "invalidScope"
          ],
          "x-ms-enum": {
            "name": "TokenError",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "grantTypeRequired",
                "description": ""
              },
              {
                "value": "authorizationGrantRequired",
                "description": ""
              },
              {
                "value": "clientSecretRequired",
                "description": ""
              },
              {
                "value": "redirectUriRequired",
                "description": ""
              },
              {
                "value": "invalidAuthorizationGrant",
                "description": ""
              },
              {
                "value": "invalidAuthorizationScopes",
                "description": ""
              },
              {
                "value": "invalidRefreshToken",
                "description": ""
              },
              {
                "value": "authorizationNotFound",
                "description": ""
              },
              {
                "value": "authorizationGrantExpired",
                "description": ""
              },
              {
                "value": "accessAlreadyIssued",
                "description": ""
              },
              {
                "value": "invalidRedirectUri",
                "description": ""
              },
              {
                "value": "accessTokenNotFound",
                "description": ""
              },
              {
                "value": "invalidAccessToken",
                "description": ""
              },
              {
                "value": "accessTokenAlreadyRefreshed",
                "description": ""
              },
              {
                "value": "invalidClientSecret",
                "description": ""
              },
              {
                "value": "clientSecretExpired",
                "description": ""
              },
              {
                "value": "serverError",
                "description": ""
              },
              {
                "value": "accessDenied",
                "description": ""
              },
              {
                "value": "accessTokenKeyRequired",
                "description": ""
              },
              {
                "value": "invalidAccessTokenKey",
                "description": ""
              },
              {
                "value": "failedToGetAccessToken",
                "description": ""
              },
              {
                "value": "invalidClientId",
                "description": ""
              },
              {
                "value": "invalidClient",
                "description": ""
              },
              {
                "value": "invalidValidTo",
                "description": ""
              },
              {
                "value": "invalidUserId",
                "description": ""
              },
              {
                "value": "failedToIssueAccessToken",
                "description": ""
              },
              {
                "value": "authorizationGrantScopeMissing",
                "description": ""
              },
              {
                "value": "invalidPublicAccessTokenKey",
                "description": ""
              },
              {
                "value": "invalidPublicAccessToken",
                "description": ""
              },
              {
                "value": "publicFeatureFlagNotEnabled",
                "description": ""
              },
              {
                "value": "sshPolicyDisabled",
                "description": ""
              },
              {
                "value": "hostAuthorizationNotFound",
                "description": ""
              },
              {
                "value": "hostAuthorizationIsNotValid",
                "description": ""
              },
              {
                "value": "invalidScope",
                "description": ""
              }
            ]
          }
        },
        "authorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "errorDescription": {
          "type": "string"
        },
        "hasError": {
          "type": "boolean"
        },
        "isFirstPartyClient": {
          "type": "boolean"
        },
        "refreshToken": {
          "$ref": "#/definitions/RefreshTokenGrant"
        },
        "scope": {
          "type": "string"
        },
        "tokenType": {
          "type": "string"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AuthorizationGrant": {
      "description": "",
      "type": "object",
      "properties": {
        "grantType": {
          "enum": [
            "none",
            "jwtBearer",
            "refreshToken",
            "implicit",
            "clientCredentials"
          ],
          "x-ms-enum": {
            "name": "GrantType",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "jwtBearer",
                "description": ""
              },
              {
                "value": "refreshToken",
                "description": ""
              },
              {
                "value": "implicit",
                "description": ""
              },
              {
                "value": "clientCredentials",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "IssuedToken": {
      "description": "",
      "type": "object",
      "properties": {
        "isAuthenticated": {
          "type": "boolean"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "JsonWebToken": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/IssuedToken"
        }
      ],
      "properties": {}
    },
    "PagedPatTokens": {
      "description": "Returned by the List method; contains a list of personal access tokens (PATs) and the continuation token to get the next page of results",
      "type": "object",
      "properties": {
        "continuationToken": {
          "description": "Used to access the next page of results in successive API calls to list personal access tokens (PATs)",
          "type": "string"
        },
        "patTokens": {
          "description": "The list of personal access tokens (PATs)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PatToken"
          }
        }
      }
    },
    "PatToken": {
      "description": "Represents a personal access token (PAT) used to access Azure DevOps resources",
      "type": "object",
      "properties": {
        "authorizationId": {
          "description": "Unique guid identifier",
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "description": "The token name",
          "type": "string"
        },
        "scope": {
          "description": "The token scopes for accessing Azure DevOps resources",
          "type": "string"
        },
        "targetAccounts": {
          "description": "The organizations for which the token is valid; null if the token applies to all of the user's accessible organizations",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "token": {
          "description": "The unique token string generated at creation",
          "type": "string"
        },
        "validFrom": {
          "description": "The token creation date",
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "description": "The token expiration date",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PatTokenCreateRequest": {
      "description": "Encapsulates the request parameters for creating a new personal access token (PAT)",
      "type": "object",
      "properties": {
        "allOrgs": {
          "description": "True, if this personal access token (PAT) is for all of the user's accessible organizations. False, if otherwise (e.g. if the token is for a specific organization)",
          "type": "boolean"
        },
        "displayName": {
          "description": "The token name",
          "type": "string"
        },
        "scope": {
          "description": "The token scopes for accessing Azure DevOps resources",
          "type": "string"
        },
        "validTo": {
          "description": "The token expiration date. If the \"Enforce maximum personal access token lifespan\" policy is enabled and the provided token expiration date is past the maximum allowed lifespan, it will return back a PAT with a validTo date equal to the current date + maximum allowed lifespan.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PatTokenResult": {
      "description": "Contains the resulting personal access token (PAT) and the error (if any) that occurred during the operation",
      "type": "object",
      "properties": {
        "patToken": {
          "description": "The resulting personal access token (PAT)",
          "$ref": "#/definitions/PatToken"
        },
        "patTokenError": {
          "description": "The error (if any) that occurred",
          "enum": [
            "none",
            "displayNameRequired",
            "invalidDisplayName",
            "invalidValidTo",
            "invalidScope",
            "userIdRequired",
            "invalidUserId",
            "invalidUserType",
            "accessDenied",
            "failedToIssueAccessToken",
            "invalidClient",
            "invalidClientType",
            "invalidClientId",
            "invalidTargetAccounts",
            "hostAuthorizationNotFound",
            "authorizationNotFound",
            "failedToUpdateAccessToken",
            "sourceNotSupported",
            "invalidSourceIP",
            "invalidSource",
            "duplicateHash",
            "sshPolicyDisabled",
            "invalidToken",
            "tokenNotFound",
            "invalidAuthorizationId",
            "failedToReadTenantPolicy",
            "globalPatPolicyViolation",
            "fullScopePatPolicyViolation",
            "patLifespanPolicyViolation",
            "invalidTokenType",
            "invalidAudience",
            "invalidSubject",
            "deploymentHostNotSupported"
          ],
          "x-ms-enum": {
            "name": "SessionTokenError",
            "values": [
              {
                "value": "none",
                "description": ""
              },
              {
                "value": "displayNameRequired",
                "description": ""
              },
              {
                "value": "invalidDisplayName",
                "description": ""
              },
              {
                "value": "invalidValidTo",
                "description": ""
              },
              {
                "value": "invalidScope",
                "description": ""
              },
              {
                "value": "userIdRequired",
                "description": ""
              },
              {
                "value": "invalidUserId",
                "description": ""
              },
              {
                "value": "invalidUserType",
                "description": ""
              },
              {
                "value": "accessDenied",
                "description": ""
              },
              {
                "value": "failedToIssueAccessToken",
                "description": ""
              },
              {
                "value": "invalidClient",
                "description": ""
              },
              {
                "value": "invalidClientType",
                "description": ""
              },
              {
                "value": "invalidClientId",
                "description": ""
              },
              {
                "value": "invalidTargetAccounts",
                "description": ""
              },
              {
                "value": "hostAuthorizationNotFound",
                "description": ""
              },
              {
                "value": "authorizationNotFound",
                "description": ""
              },
              {
                "value": "failedToUpdateAccessToken",
                "description": ""
              },
              {
                "value": "sourceNotSupported",
                "description": ""
              },
              {
                "value": "invalidSourceIP",
                "description": ""
              },
              {
                "value": "invalidSource",
                "description": ""
              },
              {
                "value": "duplicateHash",
                "description": ""
              },
              {
                "value": "sshPolicyDisabled",
                "description": ""
              },
              {
                "value": "invalidToken",
                "description": ""
              },
              {
                "value": "tokenNotFound",
                "description": ""
              },
              {
                "value": "invalidAuthorizationId",
                "description": ""
              },
              {
                "value": "failedToReadTenantPolicy",
                "description": ""
              },
              {
                "value": "globalPatPolicyViolation",
                "description": ""
              },
              {
                "value": "fullScopePatPolicyViolation",
                "description": ""
              },
              {
                "value": "patLifespanPolicyViolation",
                "description": ""
              },
              {
                "value": "invalidTokenType",
                "description": ""
              },
              {
                "value": "invalidAudience",
                "description": ""
              },
              {
                "value": "invalidSubject",
                "description": ""
              },
              {
                "value": "deploymentHostNotSupported",
                "description": ""
              }
            ]
          }
        }
      }
    },
    "PatTokenUpdateRequest": {
      "description": "Encapsulates the request parameters for updating a personal access token (PAT)",
      "type": "object",
      "properties": {
        "allOrgs": {
          "description": "(Optional) True if this personal access token (PAT) is for all of the user's accessible organizations. False if otherwise (e.g. if the token is for a specific organization)",
          "type": "boolean"
        },
        "authorizationId": {
          "description": "The authorizationId identifying a single, unique personal access token (PAT)",
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "description": "(Optional) The token name",
          "type": "string"
        },
        "scope": {
          "description": "(Optional) The token scopes for accessing Azure DevOps resources",
          "type": "string"
        },
        "validTo": {
          "description": "(Optional) The token expiration date. If the \"Enforce maximum personal access token lifespan\" policy is enabled and the provided token expiration date is past the maximum allowed lifespan, it will return back a PAT with a validTo date equal to the date when the PAT was intially created + maximum allowed lifespan.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RefreshTokenGrant": {
      "description": "",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AuthorizationGrant"
        }
      ],
      "properties": {
        "jwt": {
          "$ref": "#/definitions/JsonWebToken"
        }
      }
    },
    "SessionToken": {
      "description": "Represents a session token used to access Azure DevOps resources",
      "type": "object",
      "properties": {
        "accessId": {
          "type": "string",
          "format": "uuid"
        },
        "alternateToken": {
          "description": "This is populated when user requests a compact token. The alternate token value is self describing token.",
          "type": "string"
        },
        "authorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "claims": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string",
          "format": "uuid"
        },
        "displayName": {
          "type": "string"
        },
        "hostAuthorizationId": {
          "type": "string",
          "format": "uuid"
        },
        "isPublic": {
          "type": "boolean"
        },
        "isValid": {
          "type": "boolean"
        },
        "publicData": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "targetAccounts": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "uuid"
          }
        },
        "token": {
          "description": "This is computed and not returned in Get queries",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "format": "uuid"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "parameters": {
    "api-Version-preview.1": {
      "name": "api-version",
      "in": "query",
      "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
      "required": true,
      "type": "string"
    }
  },
  "securityDefinitions": {
    "accessToken": {
      "type": "basic",
      "description": "Personal access token. Use any value for the user name and the token as the password."
    }
  },
  "security": [
    {
      "accessToken": []
    }
  ],
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  }
}
